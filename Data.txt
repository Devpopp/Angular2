import random

# Function to generate a 6-digit OTP
def generate_otp():
    return random.randint(100000, 999999)

# Function to verify OTP
def verify_otp(user_otp, actual_otp):
    return user_otp == actual_otp

# Main function to simulate the OTP verification process
def otp_verification(email, mobile):
    max_attempts = 3
    
    # Generate OTPs for email and mobile
    email_otp = generate_otp()
    mobile_otp = generate_otp()
    
    print(f"Simulating sending OTP to {email}: {email_otp}")
    print(f"Simulating sending OTP to {mobile}: {mobile_otp}")
    
    # Verify email OTP
    email_attempts = 0
    while email_attempts < max_attempts:
        entered_email_otp = int(input("Enter the email OTP received: "))
        if verify_otp(entered_email_otp, email_otp):
            print("Email OTP verification successful. Now verify Mobile OTP!")
            break
        else:
            email_attempts += 1
            print("Invalid email OTP. Please try again.")
            if email_attempts == max_attempts:
                print("You've exceeded the maximum number of attempts. Access denied.")
                return
    
    # Verify mobile OTP
    mobile_attempts = 0
    while mobile_attempts < max_attempts:
        entered_mobile_otp = int(input("Enter the mobile OTP received: "))
        if verify_otp(entered_mobile_otp, mobile_otp):
            print("Mobile OTP verification successful. Access granted!")
            return
        else:
            mobile_attempts += 1
            print("Invalid mobile OTP. Please try again.")
            if mobile_attempts == max_attempts:
                print("You've exceeded the maximum number of attempts. Access denied.")
                return

# Test scenarios
def run_tests():
    print("Test Scenario #1")
    otp_verification("shankar.sharma@barclays.com", "9096123456")

    print("Test Scenario #2")
    otp_verification("shankar.sharma@barclays.com", "9096123456")

    print("Test Scenario #3")
    otp_verification("shankar.sharma@barclays.com", "9096123456")

# Run the tests
run_tests()
