import pandas as pd
import re

# Load the Excel file
file_path = 'Python PS#2_data extraction.xlsx'
df = pd.read_excel(file_path)

# Function to extract date from description
def extract_date(description):
    date_pattern = r'\b\d{1,2}[-/]\d{1,2}[-/]\d{2,4}\b'
    match = re.search(date_pattern, description)
    if match:
        return pd.to_datetime(match.group(), dayfirst=True).strftime('%d-%b-%y')
    return None

# Apply the function to the 'Description' column
df['New Date'] = df['Description'].apply(extract_date)

# Split the rows where 'Description' length is more than 50 characters
def split_long_descriptions(row):
    if len(row['Description']) > 50:
        split_point = 50
        first_part = row['Description'][:split_point]
        second_part = row['Description'][split_point:]
        new_row = row.copy()
        new_row['Description'] = second_part
        return [row, new_row]
    return [row]

# Create a new DataFrame with the split rows
split_rows = df.apply(split_long_descriptions, axis=1)
df_expanded = pd.DataFrame([item for sublist in split_rows for item in sublist])

# Sorting by 'Date'
df_expanded['Date'] = pd.to_datetime(df_expanded['Date'], dayfirst=True)
df_sorted = df_expanded.sort_values(by='Date').reset_index(drop=True)

# Save to a new Excel file
output_path = 'Processed_Python_PS#2_data_extraction.xlsx'
df_sorted.to_excel(output_path, index=False)

print(f"Processed data has been saved to {output_path}")
