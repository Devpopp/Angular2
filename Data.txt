import os
import re

# Path of the first file
file1_path = "SourceHash_Report.txt"

# Path of the second file
file2_path = "DestinationHash_Report.txt"

# Output file path
output_file_path = "Comparison_Result.txt"

# Unwanted file path
unwanted_file_path = "unwanted.txt"

# Function to check if a file is unwanted
def is_unwanted(filename):
    unwanted_patterns = [
        r'bkp',               # "bkp" anywhere in the filename
        r'test',              # "test" anywhere in the filename
        r'CH\d+',             # "CH" followed by any number of digits
        r'\d',                # any single digit
        r'\.',                # any period
        r'/'                  # any forward slash
    ]
    for pattern in unwanted_patterns:
        if re.search(pattern, filename, re.IGNORECASE):
            return True
    return False

# Read hashcodes and file names from the first file
file1_hashes = {}
with open(file1_path, "r") as file1, open(unwanted_file_path, "w") as unwanted_file:
    for line in file1:
        line_parts = line.strip().split()
        if len(line_parts) < 2:
            continue
        filename, hashcode = line_parts[-2], line_parts[-1]
        if is_unwanted(filename.strip()):
            unwanted_file.write(filename + "\n")
            continue
        if filename.strip() == "EMPTY_FILE":
            hashcode = "EMPTY_FILE_HASH"
        file1_hashes[hashcode] = os.path.splitext(os.path.basename(filename))[0]

# Read hashcodes and file names from the second file
file2_hashes = {}
with open(file2_path, "r") as file2, open(unwanted_file_path, "a") as unwanted_file:
    for line in file2:
        line_parts = line.strip().split()
        if len(line_parts) < 2:
            continue
        filename, hashcode = line_parts[-2], line_parts[-1]
        if is_unwanted(filename.strip()):
            unwanted_file.write(filename + "\n")
            continue
        if filename.strip() == "EMPTY_FILE":
            hashcode = "EMPTY_FILE_HASH"
        file2_hashes[hashcode] = os.path.splitext(os.path.basename(filename))[0]

# Find the common hashcodes with same filename (excluding extension) and hashcode in both files
common_hashes = set()
for hashcode in file1_hashes.keys():
    if hashcode in file2_hashes.keys() and file1_hashes[hashcode] == file2_hashes[hashcode]:
        common_hashes.add(hashcode)

# Find the hashcodes unique to each file
unique_to_file1 = set(file1_hashes.keys()).difference(common_hashes)
unique_to_file2 = set(file2_hashes.keys()).difference(common_hashes)

# Write the results to output file
with open(output_file_path, "w") as output_file:
    for hashcode in file1_hashes.keys():
        if hashcode not in common_hashes and hashcode not in unique_to_file2:
            output_file.write(f"{file1_hashes[hashcode]}\n")

    for hashcode in file2_hashes.keys():
        if hashcode not in common_hashes and hashcode not in unique_to_file1:
            output_file.write(f"{file2_hashes[hashcode]}\n")

    for hashcode in common_hashes:
        output_file.write(f"{file1_hashes[hashcode]}\n")
